#!/bin/bash - 
#======================================================
#
#          FILE: validation.sh
# 
USAGE="./validation.sh"
# 
#   DESCRIPTION:  produce data for comparison: 11 GCMs
# 
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: --- unknown
#         NOTES: ---
#        AUTHOR: |CHAO.TANG| , |chao.tang.1@gmail.com|
#  ORGANIZATION: 
#       CREATED: 04/03/17 22:37
#      REVISION: 1.0
#=====================================================
set -o nounset           # Treat unset variables as an error
. ~/Shell/functions.sh   # ctang's functions


DIR=/Users/ctang/Code/CORDEX_AFR_studies/cordex.validation/GCMs

NO_RCM=21

# input file:
RCMfile=(\
    "rsds_AFR-44_CCCma-CanESM2_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_CNRM-CERFACS-CNRM-CM5_CLMcom-CCLM4-8-17_v1.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_CNRM-CERFACS-CNRM-CM5_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_CSIRO-QCCCE-CSIRO-Mk3-6-0_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_ICHEC-EC-EARTH_CLMcom-CCLM4-8-17_v1.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_ICHEC-EC-EARTH_DMI-HIRHAM5_v2.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_ICHEC-EC-EARTH_KNMI-RACMO22T_v1.hist_rcp85.day.1970-2005.nc" \
    "rsds_AFR-44_ICHEC-EC-EARTH_MPI-CSC-REMO2009_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_ICHEC-EC-EARTH_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_IPSL-IPSL-CM5A-LR_GERICS-REMO2009_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_IPSL-IPSL-CM5A-MR_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MIROC-MIROC5_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MOHC-HadGEM2-ES_CLMcom-CCLM4-8-17_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MOHC-HadGEM2-ES_KNMI-RACMO22T_v2.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MOHC-HadGEM2-ES_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MPI-M-MPI-ESM-LR_CLMcom-CCLM4-8-17_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MPI-M-MPI-ESM-LR_MPI-CSC-REMO2009_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_MPI-M-MPI-ESM-LR_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_NCC-NorESM1-M_DMI-HIRHAM5_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_NCC-NorESM1-M_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
	"rsds_AFR-44_NOAA-GFDL-GFDL-ESM2M_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
    )

RCMfile=(\
    "rsds_AFR-44_CCCma-CanESM2_SMHI-RCA4_v1.hist_rcp85.day.1970-2005.nc" \
    )
Reso_lon=0.437
Reso_lat=0.437

Output_File=(\
	"CanESM2_RCA4.rsds.csv" \
	"CNRM-CM5_CLMcom-CCLM4.rsds.csv" \
	"CNRM-CM5_RCA4.rsds.csv" \
	"CSIRO-Mk3-6-0_RCA4.rsds.csv" \
	"EC-EARTH_CLMcom-CCLM4.rsds.csv" \
	"EC-EARTH_DMI-HIRHAM5_v2.rsds.csv" \
	"EC-EARTH_KNMI-RACMO22T.rsds.csv" \
	"EC-EARTH_MPI-CSC-REMO2009.rsds.csv" \
	"EC-EARTH_RCA4.rsds.csv" \
	"IPSL-CM5A-LR_GERICS-REMO2009.rsds.csv" \
	"IPSL-CM5A-MR_RCA4.rsds.csv" \
	"MIROC5_RCA4.rsds.csv" \
	"HadGEM2-ES_CLMcom-CCLM4.rsds.csv" \
	"HadGEM2-ES_KNMI-RACMO22T_v2.rsds.csv" \
	"HadGEM2-ES_RCA4.rsds.csv" \
	"MPI-ESM-LR_CLMcom-CCLM4.rsds.csv" \
	"MPI-ESM-LR_MPI-CSC-REMO2009.rsds.csv" \
	"MPI-ESM-LR_RCA4.rsds.csv" \
	"NorESM1-M_DMI-HIRHAM5.rsds.csv" \
	"NorESM1-M_RCA4.rsds.csv" \
	"GFDL-ESM2M_RCA4.rsds.csv" \
    )
Output_File=(\
	"CanESM2_RCA4.rsds.csv" \
    )

GEBA=GEBA.station.gt.1mon.SA      # 44 stations, generated by mon.flg.SA.8305.py
                                  # where, input all 110 stations output 
                                  # the one with atleast ONE good point
FLAG=GEBA.flag.rsds.monthly.1983-2005.csv  # 110 station
RSDS=GEBA.rsds.monthly.1983-2005.csv       # 110 station

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  untar
#   DESCRIPTION:  untar netcdf data
#    PARAMETERS:  
#       RETURNS:  after untar the tat.gz file will be delete
#-------------------------------------------------------------------------------
function untar()
{
    #file=rsds_Amon_CNRM-CM5_historical-rcp85_r1i1p1_1990-2005.nc

    file=${1:?"please give a file."}
    cdo splityear $file year
    for year in $(seq -s " " 1990 2005)
    do
        echo $year
        cdo splitmon year$year.nc $year
    done
}


#untar ; exit


#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  getstation
#   DESCRIPTION:  sel grid points
#    PARAMETERS:  
#       RETURNS:  $GEBA
#-------------------------------------------------------------------------------
function getstation()
{
    Tline=$(wc -l $GEBA | awk '{print $1}')

    Reso_lon=${1:?"give resolution of lon as #1"}
    Reso_lat=${2:?"give resolution of lat as #2"}



    for i in $(seq -s " " 1 $Tline)
    do
        lat=$(awk 'NR=='$i'{print $3}' $GEBA )
        lon=$(awk 'NR=='$i'{print $4}' $GEBA )

	    sta=$(awk 'NR=='$i'{print $2}' $GEBA)


	    lat1=$(awk 'NR=='$i'{print $3-0.5*"'$Reso_lat'"}' $GEBA)
        lat2=$(awk 'NR=='$i'{print $3+0.5*"'$Reso_lat'"}' $GEBA)

        lon1=$(awk 'NR=='$i'{print $4-0.5*"'$Reso_lon'"}' $GEBA)
        lon2=$(awk 'NR=='$i'{print $4+0.5*"'$Reso_lon'"}' $GEBA)

        cdo -s sellonlatbox,$lon1,$lon2,$lat1,$lat2 199901.nc test.nc 2>&1-

        # get dimensions for ERA_Interim/SARAH2 data:
        #nx=$(cdo -s sinfo test.nc | grep lonlat | awk '{print $6}' )

        # get dimensions for CORDEX-Africa data:
        #nx=$(cdo -s sinfo test.nc | grep cur | awk '{print $6}' )

        # get dimensions for GCMs:
        nx=$(cdo -s sinfo test.nc | grep "gaussian" | awk '{print $6}' )
        nx=$(cdo -s sinfo test.nc | grep "lonlat" | awk '{print $6}' )
        nx=$(cdo -s sinfo test.nc | grep "curvilinear" | awk '{print $6}' )

        echo ----- $i --station=$sta, test: box: $lon1,$lon2,$lat1,$lat2,lonlat=$nx

#=================================================== 
        for y in $(seq -s " " 1990 2005)
        do
            for m in 01 02 03 04 05 06 07 08 09 10 11 12
            do
                
                cdo -s sellonlatbox,$lon1,$lon2,$lat1,$lat2 $y$m.nc $y${m}_$sta.nc 2>&1-

                echo $y${m}_$sta.nc $i
            done
        done
    done

}


#getstation


function clear()
{
    rm year????.nc 19*.nc 20*.nc 
}

#clear_untar; exit
#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  GEBAprepare
#   DESCRIPTION:  get 44 station from all 110 station,GEBA.station.gt.1mon.SA     
#                 generated by mon.flg.SA.8305.py
#    PARAMETERS:  
#       RETURNS: 110*23 years = 2530 record are all considered, select sta with at least 1 mon
#-------------------------------------------------------------------------------

function GEBAprepare()
{
    rm FLAG.mon.GEBA RSDS.mon.GEBA
    for station in $(awk '{print $2}' $GEBA)
    do
        echo $station
        awk -F "," -v val=$station '$1 == val' $FLAG >> FLAG.mon.GEBA
        awk -F "," -v val=$station '$1 == val' $RSDS >> RSDS.mon.GEBA
    done

    # remove all zero year:

    awk -F "," '{sum=0;for(i=4;i<=16;i++) sum+=$i; if(sum>0) print $0","NR}' FLAG.mon.GEBA > flag.mon.GEBA.csv

    # get the same line as flag file for rsds
    rm rsds.mon.GEBA.csv
    for i in $(seq -s " " 1 423)
    do
        n=$(awk -F "," 'NR=='$i'{print $18}' flag.mon.GEBA.csv)

        awk -F "," 'NR=='$n'{print $0","NR}' RSDS.mon.GEBA >> rsds.mon.GEBA.csv

    done
}

#GEBAprepare

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  CMSprepare
#   DESCRIPTION:  get 44 station from all 110 station, from flag.mon.GEBA.csv
#    PARAMETERS:  
#       RETURNS:  ERA_Interim.rsds.csv
#-------------------------------------------------------------------------------

function CMSprepare()
{

    output=${1:?"please give a output name."}
    echo "#ID,StaID,year,Jan,Feb,Mar,Api,May,Jun,July,Aug,Sep,Oct,Nov,Dec" > $output

    for i in $(seq -s " " 2 424)
    do
        sta=$(awk -F "," 'NR=='$i'{print $1}' ./flag.mon.GEBA.csv)
        ID=$(awk -F "," 'NR=='$i'{print $19}' ./flag.mon.GEBA.csv)
        year=$(awk -F "," 'NR=='$i'{print $3}' ./flag.mon.GEBA.csv)

        echo -n $ID,$sta,$year, >> $output

        for m in 01 02 03 04 05 06 07 08 09 10 11 12
        do

            if [ $year -gt 1989 ];
            then
                echo $year${m}_$sta.nc
                value=$(getvalue_netCDF.py rsds $year${m}_$sta.nc)
            else
                value=""
                echo "nothing to cal..."
            fi

            echo -n $value, >> $output
        done
        echo "" >> $output
    done
}

#CMSprepare


function OutputCheck()
{

    infile9=$1

    # to check the dimensions of output file:

    NF=$(space.sh $infile9 | awk '{print NF}' | sort -n | uniq | awk 'NR==2')

    if [ NF -eq 15 ]; # 15 column is right.
    then 
        echo Gooooooooood 
    else
        color 1 7 "Buuuuuuuug"
    fi
}

#=================================================== 
#=================================================== 
#=================================================== 
#=================================================== 

# bash arrary begins from 0:
#for g in {0..1} 
for g in 0
do
    clear
    untar ${RCMfile[$g]}
    getstation $Reso_lon $Reso_lat

    CMSprepare ${Output_File[$g]}

    OutputCheck ${Output_File[$g]}

    #clear
done


rm -rf RSDS.mon.GEBA FLAG.mon.GEBA
